version: '3.8'

services:
  luminisbot:
    image: ghcr.io/luminis-gaming/luminisbot:latest
    container_name: luminisbot
    restart: unless-stopped
    environment:
      # Discord Configuration
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      
      # Warcraft Logs API
      WCL_CLIENT_ID: ${WCL_CLIENT_ID}
      WCL_CLIENT_SECRET: ${WCL_CLIENT_SECRET}
      
      # Database Configuration
      DATABASE_URL: postgresql://luminisbot:${POSTGRES_PASSWORD}@postgres:5432/luminisbot
      
      # Warcraft Recorder
      RECORDER_EMAIL: ${RECORDER_EMAIL}
      RECORDER_PASSWORD: ${RECORDER_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - luminisbot-network
    volumes:
      - ./logs:/app/logs  # Optional: for log files
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  postgres:
    image: postgres:15-alpine
    container_name: luminisbot_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: luminisbot
      POSTGRES_USER: luminisbot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "25432:5432"
    networks:
      - luminisbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U luminisbot -d luminisbot"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: luminisbot_watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # Check for updates every 5 minutes (300 seconds)
      WATCHTOWER_POLL_INTERVAL: 300
      # Only update containers with the label
      WATCHTOWER_LABEL_ENABLE: true
      # Clean up old images
      WATCHTOWER_CLEANUP: true
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

volumes:
  postgres_data:

networks:
  luminisbot-network:
    driver: bridge
