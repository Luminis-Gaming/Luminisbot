version: '3.8'

# Temporary docker-compose file that builds locally instead of pulling from registry
# Use this until the GitHub Actions successfully builds and pushes to GHCR

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: luminisbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: luminisbot
      POSTGRES_USER: luminisbot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "25432:5432"
    networks:
      - luminisbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U luminisbot -d luminisbot"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Discord Bot (building locally)
  luminisbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: luminisbot-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Discord Configuration
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      
      # Warcraft Logs API
      WCL_CLIENT_ID: ${WCL_CLIENT_ID}
      WCL_CLIENT_SECRET: ${WCL_CLIENT_SECRET}
      
      # Database Configuration
      DATABASE_URL: postgresql://luminisbot:${POSTGRES_PASSWORD}@postgres:5432/luminisbot
      
      # Warcraft Recorder
      RECORDER_EMAIL: ${RECORDER_EMAIL}
      RECORDER_PASSWORD: ${RECORDER_PASSWORD}
    networks:
      - luminisbot-network
    volumes:
      - ./logs:/app/logs  # Optional: for log files

volumes:
  postgres_data:
    driver: local

networks:
  luminisbot-network:
    driver: bridge
